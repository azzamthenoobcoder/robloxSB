--[[
    Fast Interact with Toggle GUI
]]

-- Create and setup the GUI
local player = game.Players.LocalPlayer
local playerGui = player:WaitForChild("PlayerGui")

local screenGui = Instance.new("ScreenGui")
screenGui.Name = "AutofarmGui"
screenGui.Parent = playerGui

local toggleButton = Instance.new("TextButton")
toggleButton.Name = "ToggleButton"
toggleButton.Size = UDim2.new(0, 200, 0, 50)
toggleButton.Position = UDim2.new(0.5, -100, 0.1, 0)
toggleButton.BackgroundColor3 = Color3.fromRGB(0, 255, 0)
toggleButton.TextColor3 = Color3.fromRGB(255, 255, 255)
toggleButton.TextSize = 24
toggleButton.Text = "Autofarm Enabled"
toggleButton.Parent = screenGui

local autofarmEnabled = true

-- Variables to control ongoing actions
local currentTween = nil
local tweenService = game:GetService('TweenService')
local currentEquip = nil

-- Toggle function
local function toggleAutofarm()
    autofarmEnabled = not autofarmEnabled
    if autofarmEnabled then
        toggleButton.BackgroundColor3 = Color3.fromRGB(0, 255, 0)
        toggleButton.Text = "Autofarm Enabled"
        -- Restart autofarm if it was previously disabled
        startAutofarm()
    else
        toggleButton.BackgroundColor3 = Color3.fromRGB(255, 0, 0)
        toggleButton.Text = "Autofarm Disabled"
        -- Stop current actions
        if currentTween then
            currentTween:Cancel()
            currentTween = nil
        end
        if currentEquip then
            currentEquip:Destroy()
            currentEquip = nil
        end
    end
end

toggleButton.MouseButton1Click:Connect(toggleAutofarm)

-- Function to tween to a target CFrame
function tweenToCFrame(targetCFrame, onComplete)
    if not autofarmEnabled then return end

    local tweenSpeed = 5 -- Duration of the tween in seconds
    local tween = tweenService:Create(
        player.Character:WaitForChild("HumanoidRootPart"), 
        TweenInfo.new(tweenSpeed, Enum.EasingStyle.Linear), 
        {CFrame = targetCFrame}
    )

    currentTween = tween
    tween.Completed:Connect(function()
        currentTween = nil
        if onComplete then
            onComplete()
        end
    end)
    tween:Play()
end

-- Function to simulate holding the "E" key
local function holdKeyE(duration)
    if not autofarmEnabled then return end

    local VirtualInputManager = game:GetService("VirtualInputManager")
    VirtualInputManager:SendKeyEvent(true, Enum.KeyCode.E, false, game)
    wait(duration)
    VirtualInputManager:SendKeyEvent(false, Enum.KeyCode.E, false, game)
end

-- Function to equip an item from the backpack
local function equipItem(itemName)
    if not autofarmEnabled then return end

    local backpack = player:WaitForChild("Backpack")
    local item = backpack:FindFirstChild(itemName)
    if item then
        currentEquip = player.Character:WaitForChild("Humanoid"):EquipTool(item)
    else
        warn("Item " .. itemName .. " not found in backpack. Stopping autofarm.")
        autofarmEnabled = false
        toggleButton.BackgroundColor3 = Color3.fromRGB(255, 0, 0)
        toggleButton.Text = "Autofarm Disabled"
        if currentTween then
            currentTween:Cancel()
            currentTween = nil
        end
        if currentEquip then
            currentEquip:Destroy()
            currentEquip = nil
        end
    end
end

-- Function to update the camera to follow the head's direction
local function updateCamera()
    local camera = game.Workspace.CurrentCamera
    local head = player.Character:WaitForChild("Head")
    
    -- Update the camera's CFrame to follow the head's look direction
    while autofarmEnabled do
        local headCFrame = head.CFrame
        local newCameraCFrame = CFrame.new(camera.CFrame.Position, camera.CFrame.Position + head.CFrame.LookVector)
        camera.CFrame = newCameraCFrame
        wait()  -- Update the camera each frame
    end
end

-- Function to show a notification using the game's notification system
local function showNotification(message)
    game.StarterGui:SetCore("SendNotification", {
        Title = "Notification";
        Text = message;
        Duration = 5;
    })
end

-- Function to check the inventory for "Potato Chips"
local function checkInventoryForPotatoChips()
    local backpack = player:WaitForChild("Backpack")
    local count = 0
    for _, item in ipairs(backpack:GetChildren()) do
        if item.Name == "Potato Chips" then
            count = count + 1
        end
    end
    return count
end

-- Function to start the autofarm process
local function startAutofarm()
    local function autofarmSequence()
        if not autofarmEnabled then return end

        -- Check for "Potato Chips" in the inventory before restarting the sequence
        local potatoChipsCount = checkInventoryForPotatoChips()
        if potatoChipsCount >= 5 then
            autofarmEnabled = false
            toggleButton.BackgroundColor3 = Color3.fromRGB(255, 0, 0)
            toggleButton.Text = "Autofarm Disabled"
            showNotification("Autofarm stopped: 5 Potato Chips reached")
            return
        end

        tweenToCFrame(CFrame.new(-479.328, 3.86194, -437.108, 
            -1, 1.74215e-08, -0.000183297, 
            1.74272e-08, 1, -3.12233e-08, 
            0.000183297, -3.12265e-08, -1), function()
            holdKeyE(1)
            equipItem("Potato")
            if not autofarmEnabled then return end
            
            tweenToCFrame(CFrame.new(-462.766, 3.86197, -447.563, 
                0.022778, -4.23459e-08, -0.999741, 
                3.08267e-08, 1, -4.16545e-08, 
                0.999741, -2.98699e-08, 0.022778), function()
                holdKeyE(1)
                wait(3)  -- Wait for 3 seconds after holding key E
                
                tweenToCFrame(CFrame.new(-463.539, 3.86192, -473.467, 
                    0.0976787, 5.05944e-08, -0.995218, 
                    8.23311e-09, 1, 5.16456e-08, 
                    0.995218, -1.32384e-08, 0.0976787), function()
                    holdKeyE(1)
                    wait(3)  -- Wait for 3 seconds after holding key E
                    equipItem("Flour")
                    if not autofarmEnabled then return end
                    
                    tweenToCFrame(CFrame.new(-462.808, 3.86185, -522.048, 
                        0.0150104, -2.44055e-08, -0.999887, 
                        9.11914e-09, 1, -2.42713e-08, 
                        0.999887, -8.75379e-09, 0.0150104), function()
                        holdKeyE(1)
                        wait(3)  -- Wait for 3 seconds after holding key E
                        
                        tweenToCFrame(CFrame.new(-497.085, 3.86191, -491.297, 
                            0.00463274, -6.55421e-08, 0.999989, 
                            -1.52206e-08, 1, 6.56133e-08, 
                            -0.999989, -1.55244e-08, 0.00463274), function()
                            holdKeyE(1)
                            wait(62)
                            holdKeyE(1)
                            showNotification("autofarm done")
                            
                            -- Wait for 3 seconds before restarting the autofarm sequence
                            wait(3)
                            autofarmSequence()  -- Restart the autofarm sequence
                        end)
                    end)
                end)
            end)
        end)
    end
    
    -- Start the autofarm sequence
    autofarmSequence()
end

-- Initial start of the autofarm process
startAutofarm()
